家具网购实战项目
前置技术：
		正则表达式、Mysql、JDBC、数据库连接池技术、满汉楼项目
相关说明：
		这里暂时使用原生的servlet/filter，没有使用框架
项目项目开发流程：
	需求分析阶段：20%
		1.需求分析师/产品经理
		2.能力：技术背景+行业背景
		3.工作：完成需求分析=》出需求分析白皮书
		4.必须准确地分析客户/项目需求需要完成地功能
	设计阶段：20%
		1.架构师/项目经理
		2.能力：技术全面+项目管理+管人
		3.工作：设计工作（uml类图，时序图，流程图，部署……数据库（表）设计+模块划分+界面UI）
		4.组织团队--选人
		5.技术选型==》web开发[jsp+servlet]，ssm，spring boot + could + vue + linux，数据库+redis..
		6.心得：做公司的核心人员，不可替代
		7.原型开发搭建基本界面，签字
	开发阶段/实现阶段：30%
		1.程序员，某某开发工程师+前端
		2.看文档==》理解需求==》完成指定模块功能
		3.小组长 负责 (任务由小组长分配，并对点进行review)
		4.订单模块[表/分层]/支付模块/xx模块
		5.自己测试代码，git-》提交	
	测试阶段：20%
		1.测试工程师/测试经理
		2.完成单元测试，集成测试，系统测试……
		3.技术：测试用例，黑百盒测试，压力测试，自动化测试工具
		4.对应的高级测试工程师，要求会写测试脚本python,linux
		5.一般与开发交替执行 ==>一边开发一边测试
	实施阶段：5%
		1.实施工程师
		2.任务：把开发好的项目部署到系统里面去，涉及出差,身体好
		3.能力：对各种环境熟悉，网络、操作系统、网络设备/配置，框架软件安装，数据库
	维护阶段：5%
		1.对项目进行维护
		2.比如在使用过程中，出现了错误，要及时的回馈并解决
		3.这个事就交给维护人员，大公司/大项目有专门的维护部门，小公司就只需要一个售后人员，对接人员
		4.先重启-》重装软件配置-》重装系统-》反馈给开发[项目经理]
	各个阶段时间分配：
	职业方向：
		一定要有兴趣；能做好；

	
项目界面（原型开发）
		由前端人员开发，前后端通过接口调用交互
		
后端经典三层结构
	家居网购-程序框架图：
		使用分层模式: 分层的目的是为了解耦，降低代码的耦合度，有利项目的维护和升级- 经典的JavaEE 三层架构
		了解每层的功能是什么，用了哪些技术 web service dao
MVC：
	MVC 全称∶ Model 模型、View 视图、Controller 控制器。
	MVC 最早出现在JavaEE 三层中的Web 层，它可以有效的指导WEB 层的代码如何有效分离，单独工作。
	View 视图∶只负责数据和界面的显示，不接受任何与显示数据无关的代码，便于程序员和美工的分工合(Vue/JSP/Thymeleaf/HTML)
	Controller 控制器∶只负责接收请求，调用业务层的代码处理请求，然后派发页面，是一个"调度者"的角色(Servlet)
	Model 模型∶将与业务逻辑相关的数据封装为具体的JavaBean 类，其中不掺杂任何与数据处理相关的代码(JavaBean/Domain/Pojo)
	MVC 是一种思想：
		MVC 的理念是将软件代码拆分成为组件，单独开发，组合使用（目的还是为了解耦合）, 也有很多落地的框架比如SpringMVC
		1. model 最早期就是javabean, 就是早期的jsp+servlet+javabean
		2. 后面业务复杂度越来越高, model 逐渐分层/组件化(service + dao)
		3. 后面有出现了持久成技术(service + dao + 持久化技术(hibernate / mybatis /mybatis-plus))
		4. 还是原来的mvc ，但是变的更加强大了

实现功能01-创建项目, 正确运行静态页面
	1.会员注册功能：
		需求：验证用户名、密码格式
		思路分析：jquery+正则表达式
	2.后端注册用户：
		a.前端验证好用户信息后，提交给后端
		b.如果用户已经存在，后台返回信息告知用户已存在，并返回重新注册
		c.如果是新用户，则需要返回注册成功信息
	思路分析：
		浏览器发出请求==》
		web层：RegisterServlet.java==》
		Service==》
		dao （DBuitls）==》
		Javabean、DB（member表）
		
		
			
		
	
		
			


