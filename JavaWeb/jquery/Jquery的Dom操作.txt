jQuery的Dom操作
1.查找节点，修改属性
查找属性节点：查到所需的元素之后，可以调用jQuery对象的attr()方法来获取它的各种属性值
<img src="../image/2.png" height="100"/>
$function(){
$("button").click(
		function(){
			$("img").attr("src","../image/1.png")//修改图片资源
			$("img").attr("height","200")//修改图片高度
		}
	)
}

attr("属性","属性值")//修改对应属性的属性值

2.创建节点
A.创建
1.创建：使用jQuery 的工厂函数$(): $(html标签); 会根据传入的html标记字符串创建一个jQuery 对象, 并返回.
2.动态创建的新元素节点不会被自动添加到文档中, 而是需要使用其他方法将其插入到文档中;
3.当创建单个元素时, 需注意闭合标签和使用标准的XHTML 格式. 例如创建一个<p>元素, 可以使用$("<p/>") 或$("<p></p>"), 
  但不能使用$("<p>") 或$("</P>")
4.创建文本节点就是在创建元素节点时直接把文本内容写出来; 创建属性节点也是在创建元素节点时一起创建
B.添加（挂载）创建的节点
1、内部插入法
1.1、append(content) :向每个匹配的元素的内部的结尾处追加内容；例如：A.append(B) 
	(1)A, B 都是jquery对象, (2) 表示把B对象插入到A对象内部的结尾处(3) 结果是: B对象成为A对象的子元素/节点
1.2、appendTo(content):A.appendTo(B)(2) 表示把A对象插入到B对象内部结尾处(3)结果是A对象成为B对象的子元素/节点
1.3、prepend(content):向每个匹配的元素的内部的开始处插入内容,A.prepend(B)
	(2)表示把B对象插入到A对象内部的开始处, (3) 结果B成为A的子元素/节点
1.4、prependTo(content) :A.prependTo(B)(2) 表示把A对象插入到B对象内部的开始处(3) 结果A成为B的子元素/节点
1.5、老韩说明: 内部插入法是在元素内插入内容(该内容变成该元素的子元素或节点)
2、外部插入法：
2.1、after(content) :在每个匹配的元素之后插入内容, 举例说明A.after(B) 
		(1) A,B都是jquery对象(2) 表示B对象插入到A对象后面(3) 结果:B成为A的兄弟节点
2.2、before(content):在每个匹配的元素之前插入内容, 举例A.before(B)；
		(2) 表示B对象插入到A对象前面
2.3、insertAfter(content):把所有匹配的元素插入到另一个、指定的元素元素集合的后面, 举例说明A.insertAfter(B)
		(2) 表示把A对象插入到B对象的后面
2.4、insertBefore(content) :把所有匹配的元素插入到另一个、指定的元素元素集合的前面,举例A.insertBefore(B)
		(2) 表示把A对象插入到B对象的前面
2.5、老韩说明: 外部插入法是在元素的外面插入内容(其内容变成元素的兄弟节点)
2.6、注意: 以上方法不但能将新的DOM 元素插入到文档中, 也能对原有的DOM 元素进行移动(可以完成很多需求.)
代码示例：
<ul id="city">
	<li id="bj" name="beijing">北京</li>
	<li id="sh" name="shanghai">上海</li>
	<li id="jl" name="jilin">吉林</li>
	<li id="my" name="mianyang">绵阳</li>
</ul>
//添加重庆li 到上海下(使用dom 的传统方法)
var myli = document.createElement("li");
myli.setAttribute("id", "cq");
myli.setAttribute("name", "chongqing");
myli.innerHTML = "重庆";
document.getElementById("sh").appendChild(myli);
////jquery 方法
$("#sh").after$("<li id="cq" name="chongqing">重庆</li>")
//添加成都li 到北京前
var $myli = $("<li id="cd" name="chengdu">成都</li>")
$("ui").prepend($myli)
//移动节点
$("jl").after($("bj"))//把北京移到吉林后面

删除节点：
remove(): 从DOM 中删除所有匹配的元素, 传入的参数用于根据jQuery 表达式来筛选元素. 当某个节点用remove() 方法删除后,
		该节点所包含的所有后代节点将被同时删除. 这个方法的返回值是一个指向已被删除的节点的引用.
empty(): 清空节点– 清空元素中的所有后代节点(不包含属性节点).
代码示例：
//*****删除所有p
	$("p").remove();
//***所有p 清空
$("p").empty();//<p></p>

复制节点
1、clone(): 克隆匹配的DOM 元素, 返回值为克隆后的副本. 但此时复制的新节点不具有任何行为.
2、clone(true): 复制元素的同时也复制元素中的的事件
//克隆节点，不克隆事件
$("button").clone().appendTo("p");
//克隆节点，克隆事件
$("button").clone(true).appendTo("p");
替换节点
1.replaceWith(): 将所有匹配的元素都替换为指定的HTML 或DOM/juqery 元素
	A.replaceWith(B)==》A节点换成了B节点
2.replaceAll(): 颠倒了的replaceWith() 方法.A.replaceAll(B)
3.注意: 若在替换之前, 已经在元素上绑定了事件, 替换后原先绑定的事件会与原先的元素一起消失。可以保留新替换的元素的事件
//<p>段落</p>
//方式一
$("p").replaceWith("<button>登陆</button>");
//方式二
$("<button>登陆</button>").replaceAll("p");

 属性操作介绍/参考文档讲解即可
1.attr(): 获取属性和设置属性
2.attr()传递一个参数时, 即为某元素的获取指定属性的属性值
3.attr()传递两个参数时, 即为某元素设置指定属性的值
4.jQuery 中有很多方法都是一个函数实现获取和设置. 如: attr(), html(), text(), val(),height(), width(), css() 等, 后面我们还会举例说明.
5.removeAttr(): 删除指定元素的指定属性

样式操作
● 样式操作介绍
1.获取class 和设置class : class 是元素的一个属性, 所以获取class 和设置class 都可以使用attr() 方法来完成.
2.追加样式: addClass()
3.移除样式: removeClass() --- 从匹配的元素中删除全部或指定的class
4.切换样式: toggleClass() --- 控制样式上的重复切换.如果类名存在则删除它, 如果类名不存在则添加它.
5.判断是否含有某个样式: hasClass() --- 判断元素中是否含有某个class, 如果有, 则返回true; 否则返回false

● 常用遍历节点方法
1、取得匹配元素的所有子元素组成的集合: children(). 该方法只考虑子元素而不考虑任何后代元素.
2、取得匹配元素后面的同辈元素的集合:next()/nextAll();
3、取得匹配元素前面的同辈元素的集合:prev()/prevAll();
4、取得匹配元素前后所有的同辈元素: siblings()
5、获取指定的第几个元素: nextAll().eq(index)
6、对获取到的同辈元素进行过滤nextAll().filter("标签")

css-dom操作

jQuery 中的事件-- 加载DOM
1.在页面加载完毕后，浏览器会通过JavaScript 为DOM 元素添加事件.
2.在常规的JavaScript 代码中, 通常使用window.onload 方法,window.onload = function(){}
3.在jQuery 中使用$(document).ready() 方法.

homework01
$(function(){
	$("#btn").click(function(){
		var $check = $(input[type=checkbox]:checked)
		$check.length
		$check.each(function(){
			$(this).val()
		})
	})
})
homework02
1.
$("#b1").click(function(){
		$(#one).val("2号")
		})
	})
2.
//2. 使多选下拉框选中的'2号'和'5号'被选中
// 思路和上面类似
// 如何选择第二个button
// input:eq(1) 表示选择第二个input对象
	$("input:eq(1)").click(function () {
		//ctrl+b 可以看源码
		$("#many").val(["5号","2号"]);
	})
3.
4.
homework03

$("#checkedAll_2").click(function(){
	if(this.checked){
		$("input[name='items']").prop("checked",true)
	}else {
		$("input[name='items']").prop("checked", false);
	}
})
homework04
