1.tomcat 发现请求的是静态资源，会直接返回，并不会去调用Servlet（这里由默认的DefaultServlet处理）
2.浏览器请求a.html文件===》tomcat 匹配servlet，都匹配不到，则DefaultServlet就会去读取a.html文件然后返回
3.当Servlet 配置了"/", 会覆盖tomcat 的DefaultServlet（这个默认的servlet 是处理静态资源的，一旦拦截，静态资源不能处理）, 
  当其他的utl-pattern 都匹配不上时，都会走这个Servlet, 这样可以拦截到其它静态资源
 （比如，浏览器再次请求a.xml文件时，会调用配置了“/”的Servlet，而无法返回浏览器请求的静态资源文件）
4.优先级：精准匹配"/ok">目录匹配"/ok/">扩展名匹配"*.action"> /* > /

ServletConfig 类能干什么
1. 获取Servlet 程序的servlet-name 的值
2. 获取初始化参数init-param
3. 获取ServletContext 对象

8.9.3 ServletConfig 应用实例

transient关键字，不会被序列化，串行化后不会写到文件里，信息敏感

servletconfig对象创建流程：
1.当Servlet对象时，tomcat会同时创建一个ServeletConfig对象
2.如果Servlet的init方法调用super.init()
   public void init(ServletConfig config) throws ServletException {
        this.config = config;
        this.init();
        }
	把tomcat创建的ServeletConfig对象赋给GenericServlet的属性（private transient ServletConfig config;）
	这样的话getServletConfig()就可以获取到该ServeletConfig对象
	
8.10.1 为什么需要ServletContext
1. 先看一个需求：如果我们希望统计某个web 应用的所有Servlet 被访问的次数，怎么办?
方案一：多个Servlet操作数据表
方案二：多个Servlet共享ServletContext(接口)
ServletContext：可以被多个Servlet共享；数据存储形式{k-v},类似map；可以实现多个Servlet的通信；注意数据内存


	
	