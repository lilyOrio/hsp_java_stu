<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!-- 给集合属性注入值
 -->
    <bean id="master01" class="com.lily_stu.spring.bean.Master">
        <property name="name" value="太上老君"/>
        <!-- 给bean 对象的list 集合赋值-->
        <property name="monsterList">
            <list>
                <!--                引用方式-->
                <ref bean="monster03"/>
                <ref bean="monster04"/>
                <!--                内部bean方式-->
                <bean class="com.lily_stu.spring.bean.Monster">
                    <property name="id" value="123"/>
                    <property name="name" value="金角大王"/>
                    <property name="skill" value="葫芦"/>
                </bean>
            </list>
        </property>

        <property name="monsterMap">
            <map>
                <entry>
                    <key>
                        <value>monster01</value>
                    </key>
                    <ref bean="monster05"/>
                </entry>
                <!--简写方式-->
                <entry key="monster02" value-ref="monster06"/>
            </map>
        </property>

        <property name="monsterSet">
            <set>
                <ref bean="monster03"/>
                <ref bean="monster04"/>
                <ref bean="monster06"/>
            </set>
        </property>

        <property name="monsterName">
            <array>
                <value>小妖怪</value>
                <value>大妖怪</value>
                <value>妖怪</value>
            </array>
        </property>

        <property name="pros">
            <props>
                <prop key="A">a</prop>
                <prop key="B">b</prop>
                <prop key="C">c</prop>
            </props>
        </property>

    </bean>

    <!-- 引用/注入内部bean 对象, 直接在配置bean 时注入
  -->
    <bean id="memberServiceImpl02" class="com.lily_stu.spring.service.MemberServiceImpl">
        <property name="memberDAO">
            <bean class="com.lily_stu.spring.DAO.MemberDAOImpl"/>
        </property>
    </bean>

    <!-- bean 对象的相互引用
     1. 其它含义和前面一样
     2. ref 表示memberDAO 这个属性将引用/指向id = memberDAOImpl 对象
    -->
    <bean id="memberDAO" class="com.lily_stu.spring.DAO.MemberDAOImpl"/>
    <bean id="memberServiceImpl" class="com.lily_stu.spring.service.MemberServiceImpl">
        <property name="memberDAO" ref="memberDAO"/>
    </bean>


    <!--  通过p名称空间配置bean  -->
    <bean id="monster06" class="com.lily_stu.spring.bean.Monster"
          p:id="4"
          p:name="红孩儿"
          p:skill="吐火~"
    />
    <!--使用类型获取bean对象
        前提；这个类型只有一个bean,如果超过一个会报错 NoUniqueBeanDefinitionException
    -->
    <bean class="com.lily_stu.spring.bean.Car">
        <!--    设置属性值使用的是setter方法，如果没有这个方法就会报错    -->
        <property name="id" value="100"/>
        <property name="name" value="比亚迪"/>
        <property name="price" value="20"/>
    </bean>

    <!--  通过构造器配置bean对象  指定构造器完成初始化 -->
    <!--    constructor-arg 可以指定使用构造器的参数
            index表示参数索引，从0开始
            处理index还可以通过name/type来指定参数
    -->
    <bean class="com.lily_stu.spring.bean.Monster" id="monster03">
        <constructor-arg value="200" index="0"/>
        <constructor-arg value="孙悟空" index="1"/>
        <constructor-arg value="金箍棒" index="2"/>
    </bean>

    <bean class="com.lily_stu.spring.bean.Monster" id="monster04">
        <constructor-arg value="300" name="id"/>
        <constructor-arg value="孙悟空" name="name"/>
        <constructor-arg value="金箍棒" name="skill"/>
    </bean>

    <bean class="com.lily_stu.spring.bean.Monster" id="monster05">
        <constructor-arg value="300" type="java.lang.Integer"/>
        <constructor-arg value="孙悟空" type="java.lang.String"/>
        <constructor-arg value="金箍棒" type="java.lang.String"/>
    </bean>

    <!--
配置monster对象/JavaBean
在beans中可以配置多个bean,一个bean就是一个对象
class指定类的全路径，用于反射创建对象
id属性表示该Java对象在Spring容器中的id，通过id可以获取到该对象
-->
    <!--    <bean class="com.lily_stu.spring.bean.Monster" id="monster01">-->
    <!--        &lt;!&ndash;没有指定就使用默认值&ndash;&gt;-->
    <!--        <property name="id" value="100"/>-->
    <!--        <property name="name" value="牛魔王"/>-->
    <!--        <property name="skill" value="芭蕉扇"/>-->
    <!--    </bean>-->

    <!--    <bean class="com.lily_stu.spring.bean.Monster" id="monster02">-->
    <!--        <property name="id" value="100"/>-->
    <!--        <property name="name" value="牛魔王"/>-->
    <!--        <property name="skill" value="芭蕉扇"/>-->
    <!--    </bean>-->

    <!--&lt;!&ndash;  默认id=com.lily_stu.spring.bean.Monster#0   &ndash;&gt;-->
    <!--    <bean class="com.lily_stu.spring.bean.Monster">-->
    <!--        <property name="id" value="300"/>-->
    <!--        <property name="name" value="牛魔王"/>-->
    <!--        <property name="skill" value="芭蕉扇"/>-->
    <!--    </bean>-->

    <!--    &lt;!&ndash;  默认id=com.lily_stu.spring.bean.Monster#1   &ndash;&gt;-->
    <!--    <bean class="com.lily_stu.spring.bean.Monster">-->
    <!--        <property name="id" value="600"/>-->
    <!--        <property name="name" value="牛魔王"/>-->
    <!--        <property name="skill" value="芭蕉扇"/>-->
    <!--    </bean>-->

    <!--    <bean class="com.lily_stu.spring.bean.Car" id="car01">-->
    <!--        <property name="id" value="100"/>-->
    <!--        <property name="name" value="比亚迪"/>-->
    <!--        <property name="price" value="20"/>-->
    <!--    </bean>-->
</beans>