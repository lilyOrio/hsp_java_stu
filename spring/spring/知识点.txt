手搓Spring注解配置bean
	需求：自己写一个简单的Spring 容器, 通过读取类的注解(@Component @Controller @Service @Reponsitory)，将对象注入到IOC 容器
		也就是说，不使用Spring 原生框架，我们自己使用IO+Annotaion+反射+集合技术实现, 打通Spring 注解方式开发的技术痛点
	思路分析：我们使用注解方式完成, 这里不用xml 来配置
	实现：
		1.搭建基本结构，并获取要扫描的包
		2.扫描包下面的所有.class文件
		3.获取全类名 反射创建对象 放入容器

动态代理：在不改变原有代码的情况下上进行对象功能增强 使用代理对象代替原来的对象完成功能 进而达到拓展功能的目的
        1.JDK Proxy 动态代理面向接口的动态代理
            一定要有接口和实现类的存在 代理对象增强的是实现类 在实现接口的方法重写的方法
            生成的代理对象只能转换成 接口的不能转换成 被代理类
            代理对象只能增强接口中定义的方法 实现类中其他和接口无关的方法是无法增强的
            代理对象只能读取到接口中方法上的注解 不能读取到实现类方法上的注解
        2.CGlib动态代理
        cglib动态代理模式是面向父类
        特点：
            1.面向父类的和接口没有直接关系
            2.不仅可以增强接口中定义的方法还可以增强其他方法
            3.可以读取父类中方法上的所有注解

AOP：
    AOP 的全称(aspect oriented programming) ，面向切面编程
    普通类（A类）
    通过动态代理来调用方法
    .方法调用前
    ..方法调用-反射	（A类中的方法）
    .方法调用后
    .方法异常调用
    .方法最终执行（finally）

    切面类（C类）方法可以切入到某个类的方法中执行
    方法1
    方法2
    以上两个方法可以切入到A类（或者其它普通类）的方法执行前/后执行（切入到任意一个类的任意一个方法）

    切入表达式：
        作用：定位一个或多个具体的连接点
        execution(权限修饰符 返回值类型 简单类名/全类名.方法名(参数列表))
        注意事项和细节
        1. 切入表达式也可以指向类的方法, 这时切入表达式会对该类/对象生效
        2. 切入表达式也可以指向接口的方法, 这时切入表达式会对实现了接口的类/对象生效
        3. 切入表达式也可以对没有实现接口的类，进行切入