<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lilystu.mapper.MonsterMapper">
    <!-- 实现findMonsterByAge
        test="age > 0" 不能用#{age}，无法取出参数值
            可以在Java代码里面的形参加上@Param注解
            例如：findMonsterByAge(@Param("age") Integer age);
    -->
    <select id="findMonsterByAge" resultType="Monster"
            parameterType="Integer">
        SELECT * FROM monster WHERE 1=1
        <if test="age > 0">
            AND age > #{age}
        </if>
    </select>

    <!-- 使用where 标签开始拼接
    where 标签的好处是. 会自动的加入where 子句.
    mybatis 会自动的去掉多余的AND
    -->
    <select id="findMonsterByIdAndName" parameterType="Monster" resultType="Monster">
        SELECT * FROM monster
        <where>
            <if test="id > 0">
                AND id > #{id}
            </if>
            <if test="name != null and name != ''">
                AND name = #{name}
            </if>
        </where>
    </select>

    <!-- findMonsterByIdAndName_choose[使用choose 标签]
        类似Java中的switch语句
    -->
    <select id="findMonsterByIdAndName_choose" parameterType="map"
            resultType="Monster">
        SELECT * FROM monster
        <choose>
            <!-- 这里test="name" 这name 就是你传入的map 参数对应的key -->
            <when test="name != null and name != ''">
                WHERE name = #{name}
            </when>
            <when test="id > 0">
                WHERE id > #{id}
            </when>
            <otherwise>
                WHERE 1 = 1
            </otherwise>
        </choose>
    </select>
</mapper>