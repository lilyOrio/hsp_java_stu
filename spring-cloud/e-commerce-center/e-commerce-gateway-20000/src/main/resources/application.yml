server:
  port: 2000
spring:
  application:
    name: e-commerce-gateway #名称，可以自己指定
  cloud:
    gateway:
      discovery:
        locator:
          #开启 Flag that enables DiscoveryClient gateway integration,即启用 DiscoveryClient 服务发现
          enabled: true
      #      Gateway 路由配置 方式1
      routes: #可以配置多个路由
        - id: member_routes01 #路由id
          #gateway 最终访问的 url = uri+Path 即: http://localhost:10000/memeber/get/
          #匹配后提供服务的路由地址, 也可以是外网 uri,比如 http://www.qq.com 等
#          uri: http://localhost:10088
          #说明: lb 是协议名 member-service-provider 是服务名
          # lb 协议支持负载均衡算法，默认轮询
          uri: lb://member-service-provider
          predicates:
            - Path=/member/get/** #断言,路径相匹配的进行路由,多个路径用逗号间隔
            #- After=2022-11-18T12:35:50.387+08:00[Asia/Shanghai] #断言，直接收在该时间之后发来的请求
            #- Before=2022-11-18T12:35:50.387+08:00[Asia/Shanghai] #断言，直接收在该时间之前发来的请求
            #- Between=2020-11-18T12:35:50.387+08:00[Asia/Shanghai],2022-11-18T12:35:50.387+0 8:00[Asia/Shanghai]
            #- Cookie=user, lily #请求需要带有cookie的k-v
            #- Header=X-Request-Id, hello#请求头 Header 有 X-Request-Id， 并且值 hello 才匹配/断言成功
            #- Host=**.lily.**#请求 Host 是**.lily.** 才匹配/断言成功 , 比如 Host www.lily.com
            #- Method=GET,POST
            #- Query=email, [\w-]+@([a-zA-Z]+\.)+[a-zA-Z]+ #请求有参数 email ,并且满足电子邮件的基本格式, 才能匹配/断言成功
            #- RemoteAddr=127.0.0.1 #请求端的 IP 是 127.0.0.1, 才能匹配/断言成功
#          filters: #GatewayFilter
#            - AddRequestParameter=color, blue #过滤器工厂会在匹配的请求头加上一对请求头， 名称为 color 值为 blue
#            - AddRequestParameter=age, 18 #过滤器工厂会在匹配的请求头加上一对请求头，名称为 age 值为 18
        - id: member_routes02 #路由id
#          uri: http://localhost:10088
          uri: lb://member-service-provider
          predicates:
            - Path=/member/save #断言,路径相匹配的进行路由
#        - id: member_routes03 #路由id
#          uri: https://www.baidu.com
#          predicates:
#            - Path=/ #断言,路径相匹配的进行路由


#eureka 客户端配置
eureka:
  client:
    register-with-eureka: true #将自己注册到 EurekaServer
    fetchRegistry: true
    service-url: #表示将自己注册到哪个 EurekaServer
#      defaultZone: http://localhost:9001/eureka
      defaultZone: http://eureka9001.com:9001/eureka, http://eureka9002.com:9002/eureka
