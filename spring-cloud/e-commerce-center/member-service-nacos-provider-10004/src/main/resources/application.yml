server:
  port: 10004
spring:
  application:
#    因为 member-service-provider-10000 和 member-service-provider-10002 作为一个集 群提供服务,
#    因此需要将 spring.application.name 进行统一
    name: member-service-nacos-provider #服务名称，可以自己指定
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: org.gjt.mm.mysql.Driver
    url: jdbc:mysql://localhost:3306/e_commerce_center_db?userSSL=true;userUnicode=true;characterEncoding=UTF-8
    username: root
    password: 123456
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #配置 Nacos 地址
    sentinel:
      transport:
        dashboard: localhost:8080 #这个是 sentinel 控制台(sentinel dashboard)的地址
        #老韩解读 spring.cloud.sentinel.transport.port
        #1. spring.cloud.sentinel.transport.port 端口配置会在被监控的微服务
        # 对应的机器上启动一个 Http Server
        #2. 该 Server 会与 Sentinel 控制台做交互
        #3. 比如 Sentinel 控制台添加了 1 个限流规则，会把规则数据 push 给这个Http Server 接收，Http Server
        #   再将规则注册到 Sentinel 中
        #4. 简单的说明: spring.cloud.sentinel.transport.port：指定被监控的微服务应用与
        # Sentinel 控制台交互的端口，微服务应用本地会起一个该端口占用的 Http Server
        #5. 默认 8719，假如被占用了, 会自动从 8719 开始依次+1 扫描。直至找到未被占用的端口
        port: 8719
management:
  endpoints:
    web:
      exposure:
        include: '*'

mybatis:
  mapperLocations: classpath:mapper/*.xml #后面 mapper 文件的位置
  type-aliases-package: com.lilystu.springcloud.entity # 实体类的包路径
